#%Module1.0

##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		spread/%M%
#   Revision:		%I%
#   First Edition:	2017/06/21
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite modulefile
#   Command:
#   Sub-Command:
#
#   Invocation:		load @M@, unload @M@, switch @M@ @M@,
#                   help @M@, display @M@, test @M@, whatis @M@
#   Result:	%R{
#		}R%
#   Comment:	%C{
#           Test how variable and procedure definitions spread from
#           one modulefile interpretation to another one when these
#           interpretations are cascaded.
#		}C%
#
##############################################################################


# test if specific or overridden pre-existing variables have spread here
if {[info exists spread]} {
    puts stderr "variable spread exists"
}
if {$tcl_version eq "test"} {
    puts stderr "variable tcl_version equals test"
}
if {[array exists spread_array]} {
    puts stderr "array variable spread_array exists"
}
if {$tcl_platform(osVersion) eq "test"} {
    puts stderr "variable tcl_platform(osVersion) equals test"
}
if {[llength $auto_path] <= 1} {
    puts stderr "variable auto_path has lost elements"
}
if {[lsearch -exact $auto_path $env(TESTSUITEDIR)] > -1} {
    puts stderr "variable auto_path contains $env(TESTSUITEDIR)"
}

# test if specific or overridden interpreter alias command have spread here
set existing_proc [lindex [info procs] 0]
# test if first proc defined has been altered
if {[info procs $existing_proc] ne $existing_proc} {
    puts stderr "procedure $existing_proc does not exist"
# env variable spread across interpretation and even between interpreters
# overridden proc does not spread as interp is renewed when a command is overridden
# moreover cascaded interpretation occurs in a different interpreter
} elseif {[info exists env(spreadcasccmd)] && [$existing_proc] eq "spreadcasccmd"\
    && [module-info mode] ne "whatis"} {
    puts stderr "procedure $existing_proc has been altered"
}
if {[info procs spread_proc] eq "spread_proc"} {
    puts stderr "procedure spread_proc exists"
}
if {[info procs ModulesHelp] eq "ModulesHelp"} {
    puts stderr "procedure ModulesHelp exists"
}
if {[info procs ModulesTest] eq "ModulesTest"} {
    puts stderr "procedure ModulesTest exists"
}
if {[info procs ModulesDisplay] eq "ModulesDisplay"} {
    puts stderr "procedure ModulesDisplay exists"
}
if {[info procs module-version] eq "module-version"} {
    puts stderr "procedure module-version exists"
}

setenv testspreadcmdsub "yes"
